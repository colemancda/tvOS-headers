//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <AVKit/UIGestureRecognizerDelegate-Protocol.h>
#import <AVKit/UIPopoverControllerDelegate-Protocol.h>
#import <AVKit/_AVFocusContainerDelegate-Protocol.h>

@class AVAudioOnlyIndicatorView, AVDelegateManager, AVExternalPlaybackView, AVInternalPlaybackOptions, AVKeyValueObserverCollection, AVPlaybackControlsViewController, AVPlayer, AVPlayerController, AVPlayerLayerView, AVPlayerViewControllerTransition, AVTimeRangeCollection, NSArray, NSString, NSTimer, NSURL, UITapGestureRecognizer, UIView, UIWindow, _AVB39ClickRecognizer, _AVNiceTouchRecognizer;
@protocol AVPlayerViewControllerDelegate;

@interface AVPlayerViewController : UIViewController <UIPopoverControllerDelegate, UIGestureRecognizerDelegate, _AVFocusContainerDelegate>
{
    unsigned int _showsPlaybackControls:1;
    unsigned int _playerShouldAutoplay:1;
    unsigned int _playbackControlsViewControllerShouldShowLoadingIndicator:1;
    unsigned int _playbackControlsViewControllerShouldShowScaleButton:1;
    unsigned int _showsPlaybackControlsView:1;
    unsigned int _isShowingPlaybackControlsViewForUserInteraction:1;
    unsigned int _isShowingPlaybackControlsViewForAudioOnlyContent:1;
    unsigned int _isShowingPlaybackControlsViewForPlayingOnExternalScreen:1;
    unsigned int _isFullUXEnabled:1;
    unsigned int _preferredFocusedViewCalled:1;
    unsigned int _deactivated:1;
    unsigned int _shouldPlayAfterAppBecomesActive:1;
    unsigned int _deactivationReasons;
    long long _playControlsStateToRestoreWhenAppBecomesActive;
    NSString *_videoGravity;
    AVKeyValueObserverCollection *_keyValueObservers;
    AVDelegateManager *_delegateManager;
    AVAudioOnlyIndicatorView *_audioOnlyIndicatorView;
    AVExternalPlaybackView *_externalPlaybackView;
    UIView *_contentContainerView;
    AVPlayerLayerView *_playerLayerView;
    UIView *_contentOverlayView;
    AVPlaybackControlsViewController *_playbackControlsViewController;
    AVInternalPlaybackOptions *_playbackOptions;
    UIWindow *_secondScreenWindow;
    id _screenDidConnectObserver;
    id _screenDidDisconnectObserver;
    id _activeAudioRouteDidChangeObserver;
    id _mediaServicesWereResetObserver;
    id _willAddDeactivationReasonObserver;
    id _didRemoveDeactivationReasonObserver;
    id _applicationDidEnterBackgroundObserver;
    id _applicationWillEnterForegroundObserver;
    id _pauseMPObserver;
    id _playMPObserver;
    id _playPauseMPObserver;
    id _stopMPObserver;
    id _skipForwardMPObserver;
    id _skipBackwardMPObserver;
    id _seekForwardMPObserver;
    id _seekBackwardMPObserver;
    id _playbackRateMPObserver;
    NSTimer *_loadingIndicatorTimer;
    long long _showPlaybackControlsViewCount;
    NSTimer *_hidePlaybackControlsViewAfterDelayTimer;
    AVPlayerController *_playerController;
    _AVNiceTouchRecognizer *_panGestureRecognizer;
    _AVB39ClickRecognizer *_b39GestureRecognizer;
    UITapGestureRecognizer *_menuTapRecognizerDismissal;
    UITapGestureRecognizer *_menuTapRecognizerOther;
    UITapGestureRecognizer *_playPauseTapRecognizer;
    AVTimeRangeCollection *_advertisementTimeRangeCollection;
    double _timeRemainingForCurrentAdvertisements;
    NSURL *_alternateThumbnailStreamURL;
    NSArray *_allowedSubtitleLanguages;
    UIViewController *_customInfoViewController;
    AVPlayerViewControllerTransition *_playerViewControllerTransition;
    UIView *__placeholderViewDuringPresentation;
}

+ (id)keyPathsForValuesAffectingNowPlayingPlaybackControlsViewController;
+ (id)keyPathsForValuesAffectingReadyForDisplay;
+ (id)keyPathsForValuesAffectingVideoGravity;
+ (id)keyPathsForValuesAffectingPlayer;
+ (void)initialize;
+ (id)keyPathsForValuesAffectingProgramEndDate;
+ (id)keyPathsForValuesAffectingProgramStartDate;
+ (id)metadataItemWithPosterImage:(id)arg1;
+ (id)keyPathsForValuesAffectingContentChapters;
+ (id)keyPathsForValuesAffectingAlternateThumbnailStreamURL;
@property(retain, nonatomic) UIView *_placeholderViewDuringPresentation; // @synthesize _placeholderViewDuringPresentation=__placeholderViewDuringPresentation;
@property(readonly, nonatomic) AVInternalPlaybackOptions *playbackOptions; // @synthesize playbackOptions=_playbackOptions;
- (void).cxx_destruct;
- (void)togglePlayback:(id)arg1;
- (void)gotoEndOfSeekableRanges:(id)arg1;
- (void)skipForwardThirtySeconds:(id)arg1;
- (void)skipBackwardTenSeconds:(id)arg1;
- (void)skipBackwardThirtySeconds:(id)arg1;
- (_Bool)_canDismiss;
- (void)doneButtonTapped:(id)arg1;
- (_Bool)_showsPlaybackControlsView;
- (void)_showOrHidePlaybackControlsView;
- (void)_fireHidePlaybackControlsViewAfterDelayTimer:(id)arg1;
- (void)_hidePlaybackControlsViewIfPossibleAfterDelayForUserInteraction;
- (void)_showPlaybackControlsViewIfNeededAndHideAfterDelayIfPlayingForUserInteraction;
- (void)_hidePlaybackControlsViewIfPossibleForUserInteraction;
- (void)_showPlaybackControlsViewIfNeededForUserInteraction;
- (void)_hidePlaybackControlsViewIfPossible;
- (void)_showPlaybackControlsViewIfNeeded;
- (void)_handlePlayPauseTapGesture:(id)arg1;
- (void)_handleStop;
- (_Bool)_handlePlay;
- (_Bool)_handlePause;
- (_Bool)_handleTogglePlayPause;
- (_Bool)_isPlayingOnSecondScreen;
- (_Bool)_isExternalPlaybackActive;
- (_Bool)_isPlayingOnExternalScreen;
- (void)_updatePlaybackControlsViewVisibilityForPlayingOnExternalScreen;
- (void)_updatePlaybackControlsViewVisibilityForAudioOnlyContent;
- (void)_updatePlaybackControlsViewController;
- (void)_updatePlayerLayerView;
- (void)_updateExternalPlaybackView;
- (void)_updateAudioOnlyIndicatorView;
- (void)_didResetMediaServices;
- (_Bool)_isAudioOnlyContent;
- (void)_updateShowsScaleButton;
- (void)_fireLoadingIndicatorTimer:(id)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)canBecomeFirstResponder;
- (void)updateViewConstraints;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (_Bool)_isPreferredFocusedViewControllerOfOurWindow;
- (_Bool)_isPreferredFocusedViewControllerOfView:(id)arg1;
- (_Bool)isPreferredFocusedViewController;
- (void)didUpdateFocusToFocusContainerView:(id)arg1;
- (void)didUpdateFocusFromFocusContainerView:(id)arg1;
- (void)didUpdateFocusFromView:(id)arg1;
- (id)preferredFocusedView;
- (void)_updateUXState;
- (void)activateForActivatingApp;
- (_Bool)deactivateForResigningApp;
- (void)remoteSelectButtonHeld:(id)arg1;
- (void)remoteSelectButtonUp:(id)arg1;
- (void)remoteSelectButtonDown:(id)arg1;
- (void)_remoteDigitizerTapped:(long long)arg1;
- (void)handleClickAtPosition:(long long)arg1;
- (void)handleTapAtPosition:(long long)arg1;
- (void)adjustVolume:(id)arg1;
- (_Bool)_menuTapRecognizerOtherShouldBegin;
- (void)_handleMenuTapGestureOther:(id)arg1;
- (void)_handleMenuTapGestureDismissal:(id)arg1;
- (_Bool)_handleSkipBackward;
- (_Bool)_handleSkipForward;
- (void)didPressRightArrowDigitizer;
- (void)didPressLeftArrowDigitizer;
- (void)didSwipeDown;
- (void)didSwipeUp;
- (void)navigateDown:(id)arg1;
- (void)navigateUp:(id)arg1;
- (void)panningGesture:(id)arg1;
- (id)nowPlayingPlaybackControlsViewController;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (struct CGSize)preferredContentSize;
- (void)loadView;
@property(readonly, nonatomic) UIView *contentOverlayView;
@property(nonatomic) _Bool requiresLinearPlayback;
@property(readonly, nonatomic, getter=isReadyForDisplay) _Bool readyForDisplay;
@property(copy, nonatomic) NSString *videoGravity;
@property(nonatomic) _Bool showsPlaybackControls;
@property(nonatomic) __weak id <AVPlayerViewControllerDelegate> delegate;
@property(retain, nonatomic) AVPlayer *player;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)setProgramEndDate:(id)arg1;
- (id)programEndDate;
- (void)setProgramStartDate:(id)arg1;
- (id)programStartDate;
- (void)didChangePlayerController;
@property(retain, nonatomic) AVPlayerController *playerController;
@property(readonly) NSArray *contentChapters;
- (void)setTimeRemainingForCurrentAdvertisements:(double)arg1;
- (double)timeRemainingForCurrentAdvertisements;
@property(copy, nonatomic) NSArray *allowedSubtitleOptionLanguages;
@property(nonatomic) _Bool requiresFullSubtitles;
- (void)setAlternateThumbnailStreamURL:(id)arg1;
- (id)alternateThumbnailStreamURL;
@property(retain, nonatomic) UIViewController *customInfoPanelViewController;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

