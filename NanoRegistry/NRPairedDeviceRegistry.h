//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <NanoRegistry/NRFrameworkDeviceDelegate-Protocol.h>
#import <NanoRegistry/NRPairedDeviceRegistryXPCFrameworkDelegate-Protocol.h>
#import <NanoRegistry/NSXPCConnectionDelegate-Protocol.h>

@class NSMutableArray, NSMutableDictionary, NSString, NSUUID, NSXPCConnection;
@protocol OS_dispatch_queue;

@interface NRPairedDeviceRegistry : NSObject <NRPairedDeviceRegistryXPCFrameworkDelegate, NSXPCConnectionDelegate, NRFrameworkDeviceDelegate>
{
    _Bool _xpcConnectionInvalidated;
    _Bool _devicesHaveBeenInitialized;
    _Bool _pairingClient;
    _Bool _hasSomeEntitlements;
    int _pairedStateNotifyToken;
    int _statusCodeNotifyToken;
    int _compatibilityStateNotifyToken;
    int _devicesUpdateCounterNotifyToken;
    int _nanoregistrydLaunchNotifyToken;
    NSMutableArray *_devicesBlocks;
    NSMutableDictionary *_mutableDeviceDictionary;
    NSObject<OS_dispatch_queue> *_pdrQueue;
    NSObject<OS_dispatch_queue> *_deviceQueue;
    NSObject<OS_dispatch_queue> *_reconnectQueue;
    NSMutableArray *_finishedPairingSemaphores;
    NSMutableArray *_grabDaemonStateBlocks;
    NSXPCConnection *_xpcConnection;
    NSUUID *_clientUUID;
    long long _pairingCompatibilityVersion;
    long long _maxPairingCompatibilityVersion;
    long long _minPairingCompatibilityVersion;
    unsigned long long _lastUnpairReason;
    unsigned long long _devicesUpdateCounter;
}

+ (id)sharedInstance;
@property(nonatomic) unsigned long long devicesUpdateCounter; // @synthesize devicesUpdateCounter=_devicesUpdateCounter;
@property(nonatomic) int nanoregistrydLaunchNotifyToken; // @synthesize nanoregistrydLaunchNotifyToken=_nanoregistrydLaunchNotifyToken;
@property(nonatomic) int devicesUpdateCounterNotifyToken; // @synthesize devicesUpdateCounterNotifyToken=_devicesUpdateCounterNotifyToken;
@property(nonatomic) int compatibilityStateNotifyToken; // @synthesize compatibilityStateNotifyToken=_compatibilityStateNotifyToken;
@property(nonatomic) int statusCodeNotifyToken; // @synthesize statusCodeNotifyToken=_statusCodeNotifyToken;
@property(nonatomic) int pairedStateNotifyToken; // @synthesize pairedStateNotifyToken=_pairedStateNotifyToken;
@property(nonatomic) unsigned long long lastUnpairReason; // @synthesize lastUnpairReason=_lastUnpairReason;
@property(nonatomic) long long minPairingCompatibilityVersion; // @synthesize minPairingCompatibilityVersion=_minPairingCompatibilityVersion;
@property(nonatomic) long long maxPairingCompatibilityVersion; // @synthesize maxPairingCompatibilityVersion=_maxPairingCompatibilityVersion;
@property(nonatomic) long long pairingCompatibilityVersion; // @synthesize pairingCompatibilityVersion=_pairingCompatibilityVersion;
@property(retain, nonatomic) NSUUID *clientUUID; // @synthesize clientUUID=_clientUUID;
@property(nonatomic) _Bool hasSomeEntitlements; // @synthesize hasSomeEntitlements=_hasSomeEntitlements;
@property(retain, nonatomic) NSXPCConnection *xpcConnection; // @synthesize xpcConnection=_xpcConnection;
@property(retain, nonatomic) NSMutableArray *grabDaemonStateBlocks; // @synthesize grabDaemonStateBlocks=_grabDaemonStateBlocks;
@property(retain, nonatomic) NSMutableArray *finishedPairingSemaphores; // @synthesize finishedPairingSemaphores=_finishedPairingSemaphores;
@property(nonatomic) _Bool pairingClient; // @synthesize pairingClient=_pairingClient;
@property(nonatomic) _Bool devicesHaveBeenInitialized; // @synthesize devicesHaveBeenInitialized=_devicesHaveBeenInitialized;
@property(nonatomic) _Bool xpcConnectionInvalidated; // @synthesize xpcConnectionInvalidated=_xpcConnectionInvalidated;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *reconnectQueue; // @synthesize reconnectQueue=_reconnectQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *deviceQueue; // @synthesize deviceQueue=_deviceQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *pdrQueue; // @synthesize pdrQueue=_pdrQueue;
@property(retain, nonatomic) NSMutableDictionary *mutableDeviceDictionary; // @synthesize mutableDeviceDictionary=_mutableDeviceDictionary;
@property(retain, nonatomic) NSMutableArray *devicesBlocks; // @synthesize devicesBlocks=_devicesBlocks;
- (void).cxx_destruct;
- (void)_submitAlbertPairingReport;
- (void)sendDevicesUpdatedNotification;
- (void)xpcCompatibilityStateDidChange:(unsigned short)arg1 withDevice:(id)arg2 andDeviceID:(id)arg3;
- (void)notifyStatus;
- (void)xpcLastUnpairReasonDidChange:(unsigned long long)arg1;
- (void)xpcCreateDevice:(id)arg1 deviceID:(id)arg2;
- (void)xpcDeviceDidUnpair:(id)arg1 deviceID:(id)arg2;
- (void)xpcDeviceIDDidFailToPair:(id)arg1 error:(id)arg2;
- (void)xpcDeviceDidPair:(id)arg1 deviceID:(id)arg2;
- (void)xpcHasNewOOBKey:(id)arg1;
- (void)xpcDeviceNeedsActivation:(id)arg1 deviceID:(id)arg2;
- (void)xpcDidReceiveBTPairingRequest:(id)arg1 deviceID:(id)arg2;
- (void)xpcDevice:(id)arg1 deviceID:(id)arg2 needsPasscode:(id)arg3;
- (void)xpcRemoteUnpairingDidBegin;
- (void)xpcDidBeginPairing:(id)arg1 deviceID:(id)arg2;
- (void)xpcSetValue:(id)arg1 forProperty:(id)arg2 deviceID:(id)arg3 withSequenceNumber:(unsigned long long)arg4;
- (void)_xpcInvalidationHandler;
- (void)_xpcFrameworkInitializationSuccessWithStatus:(unsigned long long)arg1 andDevices:(id)arg2 hasEntitlements:(_Bool)arg3 andCompatibilityState:(unsigned short)arg4 andPairingCompatibilityVersion:(long long)arg5 andMaxCompatibilityVersion:(long long)arg6 andMinCompatibilityVersion:(long long)arg7 andLastUnpairReason:(unsigned long long)arg8 andDevicesUpdateCounter:(unsigned long long)arg9;
- (void)_updateDevice:(id)arg1 updatedDevice:(id)arg2;
- (id)_findPairingDevice;
- (id)_findActivePairedDevice;
- (id)_findActiveDevice;
- (void)_reinitializeFrameworkWithBlock:(CDUnknownBlockType)arg1;
- (_Bool)supportsPairedDevice;
- (_Bool)_supportsWatch;
- (void)_destroyAllData;
- (void)_xpcInitializeConnection;
- (void)_addRemoveRecoveryStepIDSFinalize:(_Bool)arg1;
- (void)_addRemoveRecoveryStepObliterate:(_Bool)arg1 withStatePath:(id)arg2;
- (void)_addRemoveRecoveryStepResetNVRAM:(_Bool)arg1;
- (void)_addRemoveRecoveryStepICloudDeletePaymentCards:(_Bool)arg1;
- (void)_addRemoveRecoveryStepStockholmReset:(_Bool)arg1;
- (void)_addRemoveRecoveryStepIDSUnpair:(_Bool)arg1 withPairingDeviceID:(id)arg2;
- (void)_addRemoveRecoveryStepUnpairBluetooth:(_Bool)arg1 withPairingDeviceID:(id)arg2;
- (void)_addRemoveRecoveryStepDeletePairingStore:(_Bool)arg1 withPairingDeviceID:(id)arg2;
- (void)_addRemoveRecoveryStepRemoteUnpair:(_Bool)arg1 withAdvertisedName:(id)arg2 andPairedDeviceID:(id)arg3;
- (void)_addRemoveRecoveryStepIDSUnpairStart:(_Bool)arg1;
- (void)_addRemoveRecoveryStepDeleteAccounts:(_Bool)arg1;
- (void)_addRemoveRecoveryStepBackup:(_Bool)arg1 withPairingDeviceID:(id)arg2;
- (void)_addRemoveRecoveryStepDisableDaemons:(_Bool)arg1;
- (void)_setObliterationEnabled:(_Bool)arg1;
- (void)_triggerRecovery;
- (id)_recoveryDescription;
- (void)retriggerUnpairInfoDialog;
- (void)userIsCheckingForUpdate;
- (unsigned int)minorVersion;
- (unsigned int)majorVersion;
- (_Bool)isPaired;
- (id)pairingID;
- (id)pairingStorePath;
- (void)resumePairingClientCrashMonitoring;
- (void)suspendPairingClientCrashMonitoring;
- (void)abortPairingWithReason:(id)arg1;
- (void)abortPairing;
- (void)waitForPairingStorePathPairingID:(CDUnknownBlockType)arg1;
- (void)pairingStorePathPairingID:(CDUnknownBlockType)arg1;
- (void)_pairingStorePathPairingID:(CDUnknownBlockType)arg1;
- (unsigned short)compatibilityState;
- (void)enterCompatibilityState:(unsigned short)arg1 forDevice:(id)arg2;
- (void)unpairWithDevice:(id)arg1 shouldObliterate:(_Bool)arg2 operationHasBegun:(CDUnknownBlockType)arg3;
- (void)notifyPairingShouldContinue;
- (void)notifyPasscode:(id)arg1 forDevice:(id)arg2;
- (void)notifyActivationCompleted:(id)arg1 withSuccess:(_Bool)arg2;
- (void)gizmoPasscodeAdvertiseAndPairWithName:(id)arg1 operationHasBegun:(CDUnknownBlockType)arg2;
- (void)gizmoOOBAdvertiseAndPairWithName:(id)arg1 operationHasBegun:(CDUnknownBlockType)arg2;
- (void)companionPasscodePairWithDevice:(id)arg1 operationHasBegun:(CDUnknownBlockType)arg2;
- (void)companionOOBDiscoverAndPairWithName:(id)arg1 withOutOfBandPairingKey:(id)arg2 operationHasBegun:(CDUnknownBlockType)arg3;
- (id)getAllDevices;
- (id)getActivePairedDevice;
- (id)getDevices;
- (void)getDevicesWithBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (void)ensureDevicesUpToDate;
- (void)ensureDevicesHaveBeenInitializedOnce;
- (void)ensureDaemonHasStartedOnce;
- (unsigned long long)readNotifyToken:(int)arg1;
- (unsigned long long)_status;
@property(readonly, nonatomic) unsigned long long status;
- (void)initNotifyTokens;
- (int)registerNotifyTokenWithName:(id)arg1 withQueue:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (int)registerNotifyTokenWithName:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)statusCodeChanged:(int)arg1;
- (id)init;
- (void)xpcAssertInClient:(id)arg1;
- (void)syncDevicesWithDevice:(id)arg1;
- (void)setActivePairedDevice:(id)arg1 operationHasBegun:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

