//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class HDSQLitePredicate, HKQuantityType, NSArray, NSNumber, _HKFilter;
@protocol HDHealthDaemon;

@interface HDStatisticsBuilder : NSObject
{
    HKQuantityType *_quantityType;
    _HKFilter *_filter;
    HDSQLitePredicate *_predicate;
    unsigned long long _statisticsOptions;
    unsigned long long _mergeStrategy;
    NSNumber *_restrictedSourceIdentifier;
    id <HDHealthDaemon> _healthDaemon;
    NSArray *_orderedSources;
}

+ (id)_predicateWithSampleType:(id)arg1 sourceIdentifier:(id)arg2 predicate:(id)arg3;
+ (id)statisticsBuilderWithQuantityType:(id)arg1 filter:(id)arg2 statisticsOptions:(unsigned long long)arg3 mergeStrategy:(unsigned long long)arg4 restrictedSourceIdentifier:(id)arg5 healthDaemon:(id)arg6;
@property(readonly, nonatomic) NSArray *orderedSources; // @synthesize orderedSources=_orderedSources;
@property(readonly, nonatomic) id <HDHealthDaemon> healthDaemon; // @synthesize healthDaemon=_healthDaemon;
@property(readonly, nonatomic) NSNumber *restrictedSourceIdentifier; // @synthesize restrictedSourceIdentifier=_restrictedSourceIdentifier;
@property(readonly, nonatomic) unsigned long long mergeStrategy; // @synthesize mergeStrategy=_mergeStrategy;
@property(readonly, nonatomic) unsigned long long statisticsOptions; // @synthesize statisticsOptions=_statisticsOptions;
@property(readonly, nonatomic) HDSQLitePredicate *predicate; // @synthesize predicate=_predicate;
@property(readonly, nonatomic) _HKFilter *filter; // @synthesize filter=_filter;
@property(readonly, nonatomic) HKQuantityType *quantityType; // @synthesize quantityType=_quantityType;
- (void).cxx_destruct;
- (_Bool)isTimeIntervalTooLong:(long long)arg1 sampleStartTime:(double)arg2 sampleEndTime:(double)arg3 seconds:(double)arg4;
- (id)orderedSourceIDsFromSources:(id)arg1 sourceManager:(id)arg2;
- (id)_initialStatisticsForStartDate:(id)arg1 endDate:(id)arg2 shouldStopProcessing:(CDUnknownBlockType)arg3 error:(id *)arg4;
- (id)_initialStatisticsForCollection:(id)arg1 startDate:(id)arg2 endDate:(id)arg3 sampleCount:(long long)arg4 shouldStopProcessing:(CDUnknownBlockType)arg5 error:(id *)arg6;
- (void)_setupOrderedSources;
- (void)_enumerateSamplesWithType:(id)arg1 predicate:(id)arg2 database:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (id)updateStatistics:(id)arg1 withSamples:(id)arg2 error:(id *)arg3;
- (id)updateStatisticsCollection:(id)arg1 withSamples:(id)arg2 anchor:(id)arg3 error:(id *)arg4;
- (id)initialStatisticsShouldStopProcessing:(CDUnknownBlockType)arg1 error:(id *)arg2;
- (id)initialStatisticsForCollection:(id)arg1 shouldStopProcessing:(CDUnknownBlockType)arg2 error:(id *)arg3;
- (id)initWithQuantityType:(id)arg1 filter:(id)arg2 statisticsOptions:(unsigned long long)arg3 mergeStrategy:(unsigned long long)arg4 restrictedSourceIdentifier:(id)arg5 healthDaemon:(id)arg6;

@end

